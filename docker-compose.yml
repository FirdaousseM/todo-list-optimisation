version: "3.8"

services:
  todolist-app:
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3000/todos"]
        interval: 5s
        timeout: 2s
        retries: 10
    container_name: todolist-app
    build: .
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./prisma:/app/prisma
      - ./data:/app/data
      - ./src:/app/src
      - ./package.json:/app/package.json
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - k6net 

  redis:
    image: redis:7
    networks:
      - k6net

  k6:
    container_name: k6
    build:
      context: .
      dockerfile: k6.Dockerfile
    environment:
      - API_URL=http://todolist-app:3000
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    volumes:
      - ./tests:/tests
    command: [
      "k6",
      "run",
      "--out=experimental-prometheus-rw=http://prometheus:9090/api/v1/write",
      "/tests/load.test.js"
    ]
    ports:
      - "6565:6565"
    depends_on:
      todolist-app:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - k6net


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090" 
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml 
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle' 
      - '--web.enable-remote-write-receiver'
    networks:
      - k6net

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - k6net

volumes:
  grafana-storage:

networks:
  k6net:
    driver: bridge
