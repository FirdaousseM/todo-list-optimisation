services:
  todolist-app:
    container_name: todolist-app
    build: .
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./data:/app/data
      - ./src:/app/src
      - ./package.json:/app/package.json
    networks:
      - k6net 
  k6:
    build:
      context: .
      dockerfile: k6.Dockerfile
    environment:
      - API_URL=http://todolist-app:3000
    volumes:
      - ./tests:/tests
    command: run --out experimental-prometheus-rw /tests/load.test.js # Runs the main k6 script

    entrypoint: [
      "k6", "run",
      "--out", "experimental-prometheus-rw",
      "/tests/load.test.js"
    ]
    ports:
      - "6565:6565"
    depends_on:
      - todolist-app
      - prometheus  
    networks:
      - k6net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090" 
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml 
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle' 
      - '--web.enable-remote-write-receiver'
    networks:
      - k6net
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - k6net

  otel-collector:
      image: otel/opentelemetry-collector:latest
      command: ["--config=/etc/otel-collector-config.yaml"]
      volumes:
        - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      ports:
        - "4318:4318" 
        - "9464:9464" 
      networks:
        - k6net
volumes:
  grafana-storage:
networks:
  k6net:
    driver: bridge